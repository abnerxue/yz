<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title></title>
    <script>
        alert("源栈你好!");
        //利用JavaScript计算出：[(23+7)x12-8]÷6的值
        var sum;
        sum = ((23 + 7) * 12 - 8) / 6;
        console.log(sum);
        //利用循环，计算出1+3+5+7+...+99=?
         var sum = 0;
        for (i = 1; i < 100; i = i + 2) {
            sum +=i
        };
         console.log(sum);
        //使用JavaScript内置字符串函数，将 “‘源栈’：飞哥小班教学，线下免费收看” 变成：“大神"小"班教学，线上免费收看”。
        var yz = "'源栈':飞哥小班教学，线下免费看’";
        var kh = '"大神""小"班教学,线上免费看';
         console.log(yz);
         console.log(kh);
        //将数组['why','gIT','vs2019','community','VERSION']规范化，所有字符串：
          //首字母大写开头，其他字母小写
         //截去超过6个字符的部分，如'community'将变成'Commun'
        var arr = ['why', 'gIT', 'vs2019', 'community', 'VERSION']
        arr[0] = ['Why'];
        arr[1] = ['Git'];
        arr[2] = ['Vs2019'];
        arr[3] = ['Commun'];
        arr[4] = ['Versio'];
        console.log(arr);
        //将源栈同学姓名/昵称装入数组，再根据该数组输出共有多少同学
        var arr = ['wf', 'mx', 'lw', 'xl', 'lz', 'lc', 'zx', 'mh', 'cl']
        for (i = 0; i < arr.length; i++) {
            var students = i + 1;
         
        };
         console.log(students);

        //在上述数组头部加上小雨老师，末尾加上大飞哥
        arr.unshift('小余老师') ；
        arr.push('大飞哥') ；
        console.log(arr);
        //如果一个数只能被1和它自己整除，这个数就被称之为“素数”。请找出100以内的所有素数。然后封装成一个函数findPrime(max)，可以返回max以内的所有素数。
        for (i = 1; i < 100; i++) {
            var flag = true;
            for (j = 2; j < i; j++) {
                if (i % j == 0) {
                    flag == false;
                }
            };
            if (flag) {
                console.log(i)
            }
        };
        function finddPrime(max) {
             for (i = 1; i < max; i++) {
            var flag = true;
            for (j = 2; j < i; j++) {
                if (i % j == 0) {
                    flag == false;
                }
            };
            if (flag) {
                console.log(i)
            }
        };
        }
        //建立一个函数getMaxNumber()，可以接受任意多各种类型（整数、小数、正数、负数、字符串、布尔值等）的参数，并找出里面最大的数（忽略其他类型）
        function getMaxNumber(n) {
            var data = [n]
            var maxData = minData= data[0];
            for (var i = 0; i < data.length; i++) {
             if (data[i]>maxData) {
                maxData = data[i];  // 最大值
                };
                 if (data[i]<minData) {
              minData = data[i];  // 最小值
                }
                    
        };
        //删除一个数组里面重复的元素
        var students = ['wf', 'mx', 'lw','zx', 'mh', 'cl', 'xl', 'lz', 'lc', 'zx', 'mh', 'cl'];
    function unique(arr){
        // 遍历arr，把元素分别放入tmp数组(不存在才放)
        var tmp = new Array();
        for(var i in arr){
            //该元素在tmp内部不存在才允许追加
            if(tmp.indexOf(arr[i])==-1){
                tmp.push(arr[i]);
            }
        }
        return tmp;
    }
    var arr = unique(color);
    console.log(arr);
    </script>

</head>
<body>
   
    @RenderBody()
</body>
</html>
